{"version":3,"sources":["init.js"],"names":[],"mappingsfile":"wd-gallery.js","sourcesContent":["jQuery(document).ready(function($){\n\twdgInitSortable($);\n\twdgInitPhotos($);\n\twdgInitRemove($);\n});\n\nfunction wdgInitSortable($) {\n\t$('.wd_gallery_mb').sortable();\n}\n\nfunction wdgInitPhotos($) {\n\t$('.wd_gallery_add').click(function(event) {\n\t\tevent.preventDefault();\n\t\tmedia_upload();\n\t});\n}\n\nfunction wdgInitRemove($) {\n\t$('.wd_gallery_remove').unbind('click');\n\t$('.wd_gallery_remove').click(function(event) {\n\t\tevent.preventDefault();\n\t\t$(this).parent('.wd_gallery_photo').slideUp(300, function(){\n\t\t\t$(this).remove();\n\t\t});\n\t});\n}\n\nfunction media_upload() {\n\t\n\tvar tgm_media_frame;\n\t\n\t// Bind to our click event in order to open up the new media experience.\n\t//$(document.body).on('click.tgmOpenMediaManager', '.tgm-open-media', function(e){\n\t\t// Prevent the default action from occuring.\n\t  //  e.preventDefault();\n\n\t\t// If the frame already exists, re-open it.\n\t\tif ( tgm_media_frame ) {\n\t\t\ttgm_media_frame.open();\n\t\t\treturn;\n\t\t}\n\n\t\t/**\n\t\t * The media frame doesn't exist let, so let's create it with some options.\n\t\t *\n\t\t * This options list is not exhaustive, so I encourage you to view the\n\t\t * wp-includes/js/media-views.js file to see some of the other default\n\t\t * options that can be utilized when creating your own custom media workflow.\n\t\t */\n\t\ttgm_media_frame = wp.media.frames.tgm_media_frame = wp.media({\n\t\t\t/**\n\t\t\t * We can pass in a custom class name to our frame, so we do\n\t\t\t * it here to provide some extra context for styling our\n\t\t\t * media workflow. This helps us to prevent overwriting styles\n\t\t\t * for other media workflows.\n\t\t\t */\n\t\t\tclassName: 'media-frame tgm-media-frame',\n\n\t\t\t/**\n\t\t\t * When creating a new media workflow, we are given two types\n\t\t\t * of frame workflows to chose from: 'select' or 'post'.\n\t\t\t *\n\t\t\t * The 'select' workflow is the default workflow, mainly beneficial\n\t\t\t * for uses outside of a post or post type experience where a post ID\n\t\t\t * is crucial.\n\t\t\t *\n\t\t\t * The 'post' workflow is tailored to screens where utilizing the\n\t\t\t * current post ID is critical.\n\t\t\t *\n\t\t\t * Since we only want to upload an image, let's go with the 'select'\n\t\t\t * frame option.\n\t\t\t */\n\t\t\tframe: 'select',\n\n\t\t\t/**\n\t\t\t * We can determine whether or not we want to allow users to be able\n\t\t\t * to upload multiple files at one time by setting this parameter to\n\t\t\t * true or false. It defaults to true, but we only want the user to\n\t\t\t * upload one file, so let's set it to false.\n\t\t\t */\n\t\t\tmultiple: true,\n\n\t\t\t/**\n\t\t\t * We can set a custom title for our media workflow. I've localized\n\t\t\t * the script with the object 'tgm_nmp_media' that holds our\n\t\t\t * localized stuff and such. Let's populate the title with our custom\n\t\t\t * text.\n\t\t\t */\n\t\t\ttitle: 'Insert Photos',\n\n\t\t\t/**\n\t\t\t * We can force what type of media to show when the user views his/her\n\t\t\t * library. Since we are uploading an image, let's limit the view to\n\t\t\t * images only.\n\t\t\t */\n\t\t\tlibrary: {\n\t\t\t\ttype: 'image'\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Let's customize the button text. It defaults to 'Select', but we\n\t\t\t * can customize it here to give us better context.\n\t\t\t *\n\t\t\t * We can also determine whether or not the modal requires a selection\n\t\t\t * before the button is enabled. It requires a selection by default,\n\t\t\t * and since this is the experience desired, let's keep it that way.\n\t\t\t *\n\t\t\t * By default, the toolbar generated by this frame fires a generic\n\t\t\t * 'select' event when the button is clicked. We could declare our\n\t\t\t * own events here, but the default event will work just fine.\n\t\t\t */\n\t\t\tbutton: {\n\t\t\t\ttext:  'Insert into Gallery'\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * ========================================================================\n\t\t * EVENT BINDING\n\t\t *\n\t\t * This section before opening the modal window should be used to bind to\n\t\t * any events where we want to customize the view. This includes binding\n\t\t * to any custom events that may have been generated by us creating\n\t\t * custom controller states and views.\n\t\t *\n\t\t * The events used below are not exhaustive, so I encourage you to again\n\t\t * study the wp-includes/js/media-views.js file for a better feel of all\n\t\t * the potential events you can attach to.\n\t\t * ========================================================================\n\t\t */\n\n\t\t/**\n\t\t * We are now attaching to the default 'select' event and grabbing our\n\t\t * selection data. Since the button requires a selection, we know that a\n\t\t * selection will be available when the event is fired.\n\t\t *\n\t\t * All we are doing is grabbing the current state of the frame (which will\n\t\t * be 'library' since that's the only area where we can make a selection),\n\t\t * getting the selection, calling the 'first' method to pluck the first\n\t\t * object from the string and then forcing a faux JSON representation of\n\t\t * the model.\n\t\t *\n\t\t * When all is said and done, we are given absolutely everything we need to\n\t\t * insert the data into our custom input field. Specifically, our\n\t\t * media_attachment object will hold a key titled 'url' that we want to use.\n\t\t */\n\t\ttgm_media_frame.on('select', function() {\n\t\t// \t// Grab our attachment selection and construct a JSON representation of the model.\n\t\t\tvar media_attachment = tgm_media_frame.state().get('selection').toJSON();\n\t\t\tconsole.log(media_attachment);\n\t\t\tjQuery.each(media_attachment, function( key, value ){\n\t\t\t\tvar template = newPhotoTemplate(value.id, value.title, value.caption, value.alt, value.url);\n\t\t\t\tjQuery('.wd_gallery_mb').append(template);\n\t\t\t});\n\n\t\t\twdgInitRemove(jQuery);\n\t\t});\n\n\t\t// Now that everything has been set, let's open up the frame.\n\t\ttgm_media_frame.open();\n}\n\nfunction newPhotoTemplate(id, title, caption, alt, photo) {\n\tvar template = '<div class=\"wd_gallery_photo\">' +\n\t' \t<div class=\"wd_gallery_img\"><img src=\"'+photo+'\"></div>' +\n\t'\t<div class=\"wd_gallery_details\">' +\n\t'\t\t<label for=\"wd_gallery_title_'+id+'\">Title</label>' +\n\t'\t\t<input type=\"text\" id=\"wd_gallery_title_'+id+'\" name=\"wd_gallery_title[]\" value=\"'+title+'\">' +\n\t'\t\t<label for=\"wd_gallery_caption'+id+'\">Caption</label>' +\n\t'\t\t<input type=\"text\" id=\"wd_gallery_caption'+id+'\" name=\"wd_gallery_caption[]\" value=\"'+caption+'\">' +\n\t'\t\t<label for=\"wd_gallery_alt'+id+'\">Alt Text</label>' +\n\t'\t\t<input type=\"text\" id=\"wd_gallery_alt'+id+'\" name=\"wd_gallery_alt[]\" value=\"'+alt+'\">' +\n\t'\t</div>' +\n\t'\t<input type=\"hidden\" name=\"wd_gallery_photo[]\" value=\"'+id+'\">' +\n\t'\t<a href=\"#\" class=\"button wd_gallery_remove\">Remove Photo</a>' +\n\t'</div>';\n\n\treturn template;\n}\n\nfunction wdGalleryInsertForm(galleryID) {\n\tif (galleryID > 0) {\n\t\twindow.send_to_editor(\"[wd_gallery ID=\"+galleryID+\"]\");\n\t} else {\n\t\twindow.send_to_editor(\"[wd_gallery]\");\n\t}\n\t\n}"],"sourceRoot":"/source/"}